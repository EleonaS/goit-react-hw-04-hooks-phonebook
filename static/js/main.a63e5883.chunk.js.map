{"version":3,"sources":["Components/Section/Section.styled.js","Components/Section/Section.js","Components/Container/Container.styled.js","Components/Container/Container.js","Components/Title/Title.styled.js","Components/Title/Title.js","Components/Form/Form.styled.js","Components/Form/Form.js","Components/Filter/Filter.styled.js","Components/Filter/Filter.js","Components/ContactList/ContactsList.styled.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactsList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Wrapper","styled","section","Section","children","StyledContainer","div","Container","SectionTitle","h1","Title","title","Form","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","type","onChange","pattern","placeholder","required","propType","PropTypes","string","isRequired","onSumbit","func","Filter","filter","StyledList","ul","ListItem","li","ContactsListItem","id","onDeleteContact","onClick","ContactsList","contacts","map","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","includedContact","includedName","find","contact","toLowerCase","includedNumber","replace","toast","checkContact","nanoid","prev","normalizeFilter","includes","foundContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a63e5883.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport { Wrapper };\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Section.styled';\n\nconst Section = ({ children }) => (\n  <Wrapper>{children}</Wrapper>\n);\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Section };\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  padding: 50px;\n  border-radius: 10px;\n  background-color: beige;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 0\n    10px 5px;\n`;\n\nexport { StyledContainer };\n","import PropTypes from 'prop-types';\nimport { StyledContainer } from './Container.styled';\n\nconst Container = ({ children }) => (\n  <StyledContainer>\n    {children}\n  </StyledContainer>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  color: green;\n  font-size: 30px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport { SectionTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ title }) => (\n  <SectionTitle>{title}</SectionTitle>\n);\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport { Title };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 40px;\n`;\n\nconst Label = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  height: 40px;\n  padding-left: 10px;\n  border: 1px;\n  border-bottom: 1px solid green;\n  font-size: 20px;\n  color: black;\n  background-color: transparent;\n`;\n\nconst Button = styled.button`\n  align-items: center;\n  width: 200px;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 2px solid green;\n  border-radius: 7px;\n  font-size: 18px;\n  text-transform: uppercase;\n  color: black;\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    border-color: gray;\n    color: green;\n    font-weight: 600;\n    background-color: white;\n  }\n`;\n\nexport { Label, Input, Button, Form };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Label,\n  Button,\n} from './Form.styled';\n\n/*class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n*/\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] =\n    useState('');\n\n  function handleChange(e) {\n    const { name, value } =\n      e.currentTarget;\n    //this.setState({ [name]: value });\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  }\n\n  function reset() {\n    //this.setState({\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Enter name\"\n          required\n        />\n      </Label>\n      <Label>\n        Phone number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"+111-111-11\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n\nContactForm.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onSumbit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  display: block;\n  margin-bottom: 20px;\n  height: 40px;\n  padding-left: 10px;\n  border: 1px;\n  border-bottom: 1px solid green;\n  font-size: 20px;\n  color: black;\n  background-color: transparent;\n`;\n\nexport { Label, Input };\n","import PropTypes from 'prop-types';\nimport {\n  Label,\n  Input,\n} from './Filter.styled';\n\nconst Filter = ({\n  filter,\n  onChange,\n}) => (\n  <Label>\n    Find contacts by name\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={onChange}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      placeholder=\"\"\n    />\n  </Label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  font-size: 18px;\n`;\n\nconst ListItem = styled.li`\n  width: 500px;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  padding-bottom: 20px;\n  font-size: 18px;\n  cursor: pointer;\n  &:hover {\n    color: green;\n    /*font-weight:600;    \n  font-size: 24px;*/\n  }\n`;\n\nexport { StyledList, ListItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components/Form/Form.styled';\n\nconst ContactsListItem = ({\n  id,\n  name,\n  number,\n  onDeleteContact,\n}) => (\n  <>\n    {name}: {number}\n    <Button\n      type=\"button\"\n      onClick={() =>\n        onDeleteContact(id)\n      }\n    >\n      Delete\n    </Button>\n  </>\n);\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact:\n    PropTypes.func.isRequired,\n};\n\nexport { ContactsListItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledList,\n  ListItem,\n} from './ContactsList.styled';\nimport { ContactsListItem } from 'Components/ContactListItem/ContactListItem';\n\nconst ContactsList = ({\n  contacts,\n  onDeleteContact,\n}) => (\n  <StyledList>\n    {contacts.map(\n      ({ name, number, id }) => (\n        <ListItem key={id}>\n          <ContactsListItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={\n              onDeleteContact\n            }\n          />\n        </ListItem>\n      ),\n    )}\n  </StyledList>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number:\n        PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport { ContactsList };\n","import { useState } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { nanoid } from 'nanoid';\nimport { Section } from 'Components/Section/Section';\nimport { Container } from 'Components/Container/Container';\nimport { Title } from 'Components/Title/Title';\nimport { ContactForm } from 'Components/Form/Form';\nimport { Filter } from 'Components/Filter/Filter';\nimport { ContactsList } from 'Components/ContactList/ContactsList';\nimport toast, {\n  Toaster,\n} from 'react-hot-toast';\n//!!!!  хуки должны быть на верхней облатси видимости (без if)\n\n//-----2вариант------переиспользуемый хук\n//1:07\n\nfunction App() {\n  const defaultContactsList = [\n    {\n      id: 'id-1',\n      name: 'Rosie Simpson',\n      number: '459-12-56',\n    },\n    {\n      id: 'id-2',\n      name: 'Hermione Kline',\n      number: '443-89-12',\n    },\n    {\n      id: 'id-3',\n      name: 'Eden Clements',\n      number: '645-17-79',\n    },\n    {\n      id: 'id-4',\n      name: 'Annie Copeland',\n      number: '227-91-26',\n    },\n  ];\n  const [contacts, setContacts] =\n    useLocalStorage(\n      'contact',\n      defaultContactsList,\n    );\n  const [filter, setFilter] =\n    useState('');\n\n  /////1вариант --------\n  //58min\n  //1:03  ленивая инициализация состояния = улучшили производительность (если начальное состояние зависит от выражения - делать ленивую иниц. ()=> function()  )\n  /*  const [contacts, setContacts] = useState(() => JSON.parse(\n          window.localStorage.getItem('contacts')) ?? []);\n      const [filter, setFilter] = useState('');*/\n\n  /*  /*Contacts &&\n          this.setState({\n            contacts: Contacts,\n          });*/\n  /*/return Contacts;\n     };*/\n\n  /*  useEffect(() => {\n        console.log('запускается useEffect' + Date.now())\n      // contacts !== [] \n        window.localStorage.setItem(\n        'contacts',JSON.stringify(\n              (contacts),\n            ),\n        );\n      }, [contacts]);*/\n  //-------------\n\n  function checkContact(name, number) {\n    //const { contacts } = this.state;\n    const includedName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() ===\n        name.toLowerCase(),\n    );\n\n    const includedNumber =\n      contacts.find(\n        contact =>\n          contact.number.replace(\n            /[^0-9]/g,\n            '',\n          ) ===\n          number.replace(/[^0-9]/g, ''),\n      );\n\n    if (includedName) {\n      return toast(\n        `${name} is already in contacts`,\n      );\n    }\n\n    if (includedNumber) {\n      return toast(\n        `${number} is already in contacts`,\n      );\n    }\n  }\n  //\n  function handleFormSubmit({\n    name,\n    number,\n  }) {\n    const includedContact =\n      checkContact(name, number);\n\n    if (includedContact) {\n      return;\n    }\n    const id = nanoid();\n\n    setContacts(prev => [\n      ...prev,\n      { id, name, number },\n    ]);\n  }\n  //\n  function handleChangeFilter(e) {\n    const { value } = e.currentTarget;\n    setFilter(value);\n    /*this.setState({\n            filter: e.currentTarget.value,\n          });*/\n  }\n  //\n  function deleteContact(contactId) {\n    setContacts(\n      contacts.filter(\n        contact =>\n          contact.id !== contactId,\n      ),\n    );\n  }\n\n  function foundContacts() {\n    const normalizeFilter =\n      filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(\n        contact => {\n          return contact.name\n            .toLowerCase()\n            .includes(normalizeFilter);\n        },\n      );\n    }\n  }\n\n  return (\n    <Section>\n      <Container>\n        <Title title={'Phonebook'} />\n        <ContactForm\n          onSubmit={handleFormSubmit}\n        />\n        <Toaster />\n        <Title title={`Contacts`} />\n        <Filter\n          value={filter}\n          onChange={handleChangeFilter}\n        />\n        <ContactsList\n          contacts={foundContacts()}\n          onDeleteContact={\n            deleteContact\n          }\n        />\n      </Container>\n    </Section>\n  );\n}\n\nexport default App;\n","import {\n  useState,\n  useEffect,\n} from 'react';\n\n//-----2вариант------переиспользуемый хук\n//1:07\n\nexport default function useLocalStorage(\n  key,\n  defaultValue,\n) {\n  const [state, setState] = useState(\n    () =>\n      JSON.parse(\n        window.localStorage.getItem(\n          key,\n        ),\n      ) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      key,\n      JSON.stringify(state),\n    );\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}